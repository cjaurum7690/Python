# CJ Aurum - Aurum Creative
# Password Generator with JSON storage
# July 17, 2021

import random
import json


# JSON file open and check
def open_json_file():
    with open('my_dict.json') as json_file:
        my_dict = json.load(json_file)
    return my_dict


# JSON file close
def close_json_file(my_dict):
    with open("my_dict.json", "w") as outfile:
        json.dump(my_dict, outfile)


def password_generator():
    length = int(input('How many characters? '))
    options = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%&*'
    password = ''.join((random.choice(options) for i in range(length)))

    return password


def change_password():
    my_dict = open_json_file()

    which_password = input("Which Description would you like a new password for? ")
    password = password_generator()
    print(password)
    store = input('\nWould you like to store this password? ')

    if store.lower() == 'y':
        confirm = input('Would like to assign ' + which_password + ' with password ' + password + '? ')
        if confirm.lower() == 'y':
            my_dict[str(which_password)] = str(password)
        else:
            close_json_file(my_dict)
            change_password()
    else:
        close_json_file(my_dict)
        change_password()

    # Dictionary data to be written to JSON file
    close_json_file(my_dict)


def delete_password():
    # Opening JSON file and loading to a dictionary
    my_dict = open_json_file()

    # Deleting an entry from the dictionary
    del_key = input('Which Description would you like to delete? \n')
    del my_dict[del_key]

    # Dictionary data to be written to JSON file
    close_json_file(my_dict)


def print_password_dictionary_all():
    print('Here are the contents of the file\n')

    # Opening JSON file and loading to a dictionary
    my_dict = open_json_file()
    for descr, pwd in my_dict.items():
        print(descr, ":", pwd)
    print('\n')


def create_random_password():
    # Opening JSON file and loading to a dictionary
    """with open('my_dict.json') as json_file:
        my_dict = json.load(json_file)"""
    my_dict = open_json_file()

    """length = int(input('How many characters? '))
    options = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()=+<>/?'
    password = ''.join((random.choice(options) for i in range(length)))"""
    password = password_generator()
    print(password)
    store = input('\nWould you like to store this password? ')

    if store.lower() == 'y':
        key = input('\nWhat description would you like to give the password? ')
        confirm = input('Would like to assign "' + key + '" with password "' + password + '"? ')
        if confirm.lower() == 'y':
            my_dict[str(key)] = str(password)
        else:
            close_json_file(my_dict)
            create_random_password()
    else:
        close_json_file(my_dict)
        create_random_password()

    # Dictionary data to be written to JSON file
    close_json_file(my_dict)


def main():
    print('Would you like to:\n\t1) Create a New Password\n\t2) View the Password File\n' +
          '\t3) Delete an Item from the File\n\t4) Change an Existing Password\n\t5) Exit\n')
    choice = int(input('Selection: '))

    if choice == 1:
        create_random_password()
    elif choice == 2:
        print_password_dictionary_all()
    elif choice == 3:
        delete_password()
    elif choice == 4:
        change_password()
    elif choice == 5:
        exit()
    else:
        print('Invalid response.')

    main()


# Executes the main function
if __name__ == '__main__':
    main()
